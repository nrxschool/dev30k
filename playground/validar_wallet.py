from stellar_sdk.exceptions import NotFoundError
from stellar_sdk import Keypair, Network, TransactionBuilder, Server
from requests import get, RequestException

# ler a lista wallets
pub_keys_ok2 = [
    "GDBEGPNC6PPJSKNO3O4JWQZQQT7GD6IQOUYJV2I7NCOUZ2A4BZNBRHRO",
    "GBGBWLYRB3UDFJRQALJCXLMCV3OXFLWSX4MOZRUM3CIWZBO55YG2CCRD",
    "GABSUOAFU3UDTV6XMBT7D3O6K2H4XW3PGYSQAI5R7HP7JHUOUQHDSCVB",
    "GAREQKTGVCZIRYBGBLFOV7BM47CTPJRPPMCBQKKCW5KGPS5AVFUDOEIB",
    "GDIZIJZPT5N6GAWGUVMEZDRFR7VGHJSLXMZFX7KMNGU7X7AXRGVXBWEO",
    "GDFO7IDGWQNVHI5QHVJDXYQR3T7BZOD3ZYXA65U7TAIPKF5VKSLNQZVA",
    "GAFASLN5AWEKSDNXLRUH525N2FSNTBFLFG53EPUEOKRQCWUI2BLT5JES",
    "GAKC7ZYTIRHDNDBZXYNURIVZBPMCFHZCUSLURJRHUPAWJ5W4K6JEUYRS",
    "GD5D5EY3DOBE7P5NTWWCRBJIFIB2I23DHNKPYDLINX27DQ53H56KZPPN",
    "GAQD5WQTZ4GV5JGEMXRIPNMNOTFTC7KOOEW4KKVH4ILQVHAF2VKAEDTH",
    "GBYBAUIDYG6YR3BE52A3E6SWZR4PH5PQOXTK7BKXIUNOUEMTKS4JP5C7",
    "GDWMIUSTFBSHKXGHJOX2H6T4A2IQ2EFQO4QP25QFXCJT3HHN6ELFYSVD",
    "GBZKQVIIM4744EBCJS6DFUP273S4AQUAWIVRKF4CN26D6BNLQX36ZQE2",
    "GB3UVVNAB4NIFUWVHGWGINUW6RRIQ7Q5UGHYHFQCAKD43EUQRONWPVIL",
    "GADFNPSDVL7XSIYCUDCNI4E47NVEKY7E77BACH2I57NQTQIM2G75KUTP",
    "GB2BBGHVOHUANZOB7E3B3HOQXZOJL26JKQFFNWFCWKSNPOGXEHMBVPUQ",
    "GB4E2QRBMJR36SBXGBKYTX3KMTJRGQ6TSUGLDAPCCU5ZHVA6FU7RUXEA",
    "GDGZUETRO62IUELILU35C26BVJ6S7ULY7TGQVCNXN442KI7FIHSWIRO2",
    "GDBO5PI7NXTGX2RZBZHCBUK4LXQOLNVCQPD36WHHIP6D4TK66Y2HRV26",
    "GDX4C4ACE4AKYUWW5O5AA3ZEGD5S2SF7N56MHMFYHNOUG2IXZOOH6HUE",
    "GDKB6HGBTXUMZKZV4BTZQZT5MXENIHUL6X6F25EWKAFDLMG5F7S6HXAO",
    "GA3FPWLOAMYEXSVNMP323BF5MJQQG32BQ5PN5IJYG56D3JUOGTFHIF5N",
    "GAL6HUZAEJ54XL3O6PSAIUMROFE7ITUWKGHKMONLQ4SIVLSAIPWJ6O2Q",
    "GBYW6J26N4JELTUN6WZYAWNOKIG5YAI5O33WBLH57K4TJXPX4MHUGSZC",
    "GAS2K6ESDZUMREGMYIHAZGAGVB4443PVK5UEJYJWTVXYCUKF5TVWVSS3",
    "GDTLVGKUY2OXG43WFJYN2JAZKKER253IVQFAJZXPZMRNVYPK4CKNZ6KT",
    "GDUX5WSDQQALNJTNMZC5EMZTCUOTLC3LH4ZMMQZ3J5Y6K6RXDCW5U747",
    "GBB6IIYOJ3QHN246XTDF2ZZ2Q7JPSOJLKED6IZJD6XBEUNABGKEB6UIB",
    "GC3JS5VRNMIPPASSJGXS72UKDAHDUWLIGQ5EN467F5PUABUWSPNLF523",
    "GATXRK6LD6FK6LYEJ4ZLZPPBD2MMHTYDQ3U6BNLGBC4M3L3QCC3BJIAQ",
    "GAZ6ULLYUHOJFVHT6MY7WFAN2GBWWCWFEZWLOI5HKTAAI4MCSDYTJYWR",
    "GAEGZBKR6HYQLDJ2CF3QFE5PIA4W7Y2NR2WXM45PUPAQTNT62L3EYU4V",
    "GBMXKNM3KYHOTKRHC7WV52UB3IJH4BU3FPQYWYNQ44D2J3NSDUXW42B5",
    "GBTVUE7ACSNENGTUE3LKGN6MWQ56SGKMTMUP5GMCLUEZWYIKYFE5S357",
    "GCRMOIV5JF4CGRRQPOV6BYZAXTLEBUKCBUNYPTTNXSWRX4U7BZPGNBRS",
    "GDJTWIWTMQP4J4LIESFLBC7NAGW2HH5LWEDOLD4PYMUD3WQ7H462CEFR",
    "GAHIS47WJTR6NXH5UQESWE2E7JED52YLORRVPFHL3QFC36W67OZ3YCJ4",
    "GDW6RIWBCFLSSTVPOTOUUJ4W6QV7FZKK7MSAOROCPTPEWSKSDZ246UUL",
    "GASBS5FHTGFFMYTYYIITOTX6A4ZG3J55BJGOTSQXCRDTIRRZBA6J63MG",
    "GD6GPJCOVYCEPYM55GTEHUHXWH7BC7K3Z6QKK5Y47V5OBRBYNLNET4JB",
    "GAMFRP7LKU4SOIQKSTWGFACBHXXCIOKE3CHAFANIDU4ZZ66WR6LM6LBJ",
    "GC4C4ZIJGWKNCF6W7H7AKZ7IGAZ3ABL54FKDS25EX6MP2S3N2OSVPJUW",
    "GCOECVGLEBRZFVRFEATWT7TDCPXACUTNSPMCVE3POKHYRTBOOHNEOOZB",
    "GAJF4HIDK2SOHMCP4Y7RYW6IOOQLYAIUZYUIZBGLJA7LAFRCZQIUXCSF",
    "GD4WWUZ247STNQUIKYMUZWGIWBZ5BYLLQ2BSZEJMIJV6RQQEY25DVCHR",
    "GCNNKC4CAVK6QZ4KEA52I6EZ24566FCVDM5EUDUAQMZXBBK7GO2ZSSKU",
    "GDBFPN4BB6TK3YYHDXD5Q3LUVLX3ZNBDYN6H4NKVVHHMJLXLGE5BGLXL",
    "GBOQNUERPLE6NLXJWVIHY6ETA3T3HQMU3YBWXJUI5YLED72GJJDPSPFT",
    "GANSVIA3OR537VRFFB5S3Y3HA64FMNPJF4YNVLS7LHEBYCLXQ57J3QDS",
    "GDNDGK2YAFS4HB3JILE36VXMCQMIHF3RK45DJEFKYDAFI7CTFXFXPPRI",
    "GCSL7N3K3HNABE63MSHWZFRHJ2UGN6C7USQ7KEL3KGNX3BPZ4ZHCPRBG",
    "GDSGKFLEGCRLWEAHSX7DWECMWLSMUR7SFFP5P2RLP5FW262TOMQVWOIM",
    "GAJNOD2SBB57AMK435GAXXHJFAC2LH3J3D7TXSYKVYT5MAHJ3X33XF5I",
    "GCZIWOGOVWQHDY7J74YZGXMLQ3G6QO7GQWD2U4SIC4C37353F7CWFP7G",
    "GAZUF5J7D2BWMPBRPPO7N4LCODV5PNUMKDPLHZ2WLMGFJYKTMJBWH2ZT",
    "GCRH6EHCX2LLG2SZF6PF2TNPKD3QVZXX4JRCVJWK6JLZPP7O3Z5FSLV7",
    "GA5APZYZLAWYWOVHYGPAR77DXEU6UATLUBTALWLUSXS5T2UWM237YXG7",
    "GBV6QI4WLBWM2CTL4Q5ZG6CDYHOULCNYNRV4DLKRCCU7HIJUIPZJXF2F",
    "GB3MQUJVI3CVJKXYZLBRXMIRA4RHDIDFTP3NM4S2T4AFDNOJMWRMJKK5",
    "GBGIRYFP5JXDQ6GMYGLNJLJMVUYYD3PP44PW2BOMEIDD5JDXKPIYVVIV",
    "GDP2XH67DD2ZCTBZFRKAQGV6EM4QWE3VQCLNMM62RRYGILYZ76YWLFV2",
    "GCJCJ54OPUXXFIJ6S3QCROZP5CS2MF2GZR45LP5SK5MVBKHQ6N5AWK2P",
    "GB227MAPSVM2PJBRLHW32ZWQYFCIEJ5RIJ3KTC2AN7GRY6IHLNUO5LCG",
    "GDV5RS2MJXUBFYIVSVQEVAHXN7C2Y57PHT3A4R73R34UNIIH5CZGIBEE",
    "GCRJM6PDA65QHK47JUQONF4YBY5CM4IGM5QBKJAEMYJT4YMXOFCUMG7V",
    "GARLTYSD5YHC2HQKTEIPFBG46BGU5475LRRGP2ZSAGTAAIUIGEG3L4UK",
    "GAY4PRB2OTTLRPBE2FKKFTOXT6SOGZAEAHPIQAV7LHGXRBR6326T4LR6",
    "GAM7KUP57ZJISPSIUMB7LIQWHTAX2A4XYMZQC3DSNHNPCFMADBZDI7CQ",
    "GAAFFITODLK42PWE2SHEPUHAWMMN7IASSDQ4EHZHX7ODNGYYUNWA2FFM",
    "GBVZ5PFTBCEOJ4MM2C7TT2CBLRFR7L3GUCCBBSWRQZLP6PXAJBSZNFYI",
    "GCVFLLGZFGQYCJSD2SUWJK6HSYWJD3WUAYV4QYOAMORFF4SNW2P5RSBK",
    "GDIIB26NUDUEKVO6WGNGJ5UMAFMNAXTKJSWWB7UYRMETJ2HQCX57RSYE",
    "GDA7UGSLM4BPPI7PZ4BT7573VVY36XXH3RC3NVD4Y5GICO7Y5DYP5C2W",
    "GD6UQLYRMVPPJ7DU4HE4QFGSMGZMVKFRQHIYS2H46POMAQ3A6ZMAAFPS",
    "GDSNWT67M2H7WUSQQGA4IMIRVGYJPJ3WCFYXTOZLB5CYEXNVWALVL47L",
    "GBSW6NZ6BKDHGJFF3YVYNOXIKOUT5734QOEQZRRWGAN3OA74GOQ7EJHH",
    "GBX7PB2H4QJDTAQG5ZD3TX7EDGD7S5RDTGT4KYXFAERNWFB7FHDTBGUL",
    "GCKGOVVJPEUERQFCBVTZRC44OOZARMI7HL5N2IUNBDLQBNEBPAMEHPGC",
    "GDFXZ3QWH7ZT2X3RPRHVPTCELM2UKWWNYK7S7O4O3LPPXGIZAP7YF6RZ",
    "GCTRZJAVVU2FJMOL3DW2DCUUIEGXXVKUW6IIFFCKMVM6SIXFKNCWBBSN",
    "GBGZEA5RU4Y2MF56QL3GDDPXABBNYRI4C3DES6UTWHSBQJ7332YXOHFL",
    "GBQECXUS5XBXJYKM3NLLKO4ATSLWIZQF3D24IIOTOJA6O7U4HSU44YBK",
    "GDU7GN6TJ3XH3244X3ZWLH3E5AOWQNNGXIMEZMNGYFGKT5G5MIEGNET7",
    "GA3PDNMTSXDT7AT46GRUHUZWX5VGPIG4WQHTVH4Y6UP4QSPMOSJ3IR5L",
    "GD6LJ6MNDDTZTN7T2AXCQUCT4JG7EXTXS4FTQJ4YBYMU2KYKDXBHQILR",
    "GC3MAQPJ26S26XW5BBRDQT3SLMKIOEA53JTBBTWF25555OGXWFBPG6RX",
    "GC2MGTQNNYMF7T2FMXYOUYRIV2JH4HCWK3C6UNC56AEJOQMRXJDH6JQD",
    "GBEAL3V422IYUP5XRBRJPBBQCXE5W7MCT5JVKGM27XTYHO6ZPGNW6UDN",
    "GCNDCVIX4HUZ6EMLOCZ222N3SY47AS3P6IEW2H5RZWP4I7CCIQSVFWL6",
    "GAAFUAG5TNXPPUXHAIQSBCSOZNE6RAL6VBBXIECKERJWW3CTWV54HZSA",
    "GBSPSIAKDMBUGBIMLUWVXPHG7227OXBYFGD5CFCGVJX3IHL7YIB2NBWR",
]

public_keys = list(dict.fromkeys(pub_keys_ok2))
server = Server(horizon_url="https://horizon.stellar.org")

valid_wallet = []


# validar se a carteira existe
def validate_account(public_key, server):
    try:
        server.load_account(public_key)
    except NotFoundError:
        print("The destination account does not exist!")
        print("You must be Creating Account!")
        valid_wallet.append(public_key)


for pubkey in public_keys:
    validate_account(pubkey, server)
# descartar se j√° existir

print(valid_wallet)
